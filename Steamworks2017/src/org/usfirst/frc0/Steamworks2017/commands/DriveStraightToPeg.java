// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc0.Steamworks2017.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc0.Steamworks2017.Robot;

/**
 *
 */
public class DriveStraightToPeg extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    private int startPosition;

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public DriveStraightToPeg() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	Robot.driveTrain.driving(0, -0.3, 0);
    	//setTimeout(3);
    	SmartDashboard.putNumber("BL Start Position", Robot.driveTrain.getBLPosition());
    	SmartDashboard.putNumber("BR Start Position", Robot.driveTrain.getBRPosition());
    	SmartDashboard.putNumber("FL Start Position", Robot.driveTrain.getFLPosition());
    	SmartDashboard.putNumber("FR Start Position", Robot.driveTrain.getFRPosition());
    	//startPosition = Robot.driveTrain.getFRPosition();
    	startPosition = Robot.driveTrain.getFLPosition();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	Robot.driveTrain.driving(0, -0.3, 0);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        //return Robot.driveTrain.getFRPosition() - startPosition > 10000;
        return Robot.driveTrain.getFLPosition() - startPosition < -10000;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.driveTrain.driving(0, 0, 0);
    	SmartDashboard.putNumber("BL Stop Position", Robot.driveTrain.getBLPosition());
    	SmartDashboard.putNumber("BR Stop Position", Robot.driveTrain.getBRPosition());
    	SmartDashboard.putNumber("FL Stop Position", Robot.driveTrain.getFLPosition());
    	SmartDashboard.putNumber("FR Stop Position", Robot.driveTrain.getFRPosition());
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
